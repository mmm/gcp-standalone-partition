#!/bin/bash
#
# Copyright 2023 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apt-get -q update && apt-get -qq install -y \
  nfs-common \
  wget \
  rsync \
  software-properties-common \
  git \
  ansible \
  tmux

mount_nvme_device() {
  local device=$1
  local target=$2
  local filesystem=$3

  mkfs.$filesystem $device || echo "failed to format $device with $filesystem"

  mkdir -p $target
  echo UUID=$(sudo blkid -s UUID -o value $device) $target $filesystem discard,defaults,nofail 0 2 | sudo tee -a /etc/fstab

  mount $target || echo "failed to mount $device on $target"
}
nvme_device="/dev/disk/by-id/google-local-nvme-ssd-0"
[ -b "$nvme_device" ] && mount_nvme_device $nvme_device "/scratch" "ext4"

mount_nfs_volume() {
  local share=$1
  local target=$2

  mkdir -p $target
  echo $share $target nfs defaults,_netdev 0 0 | sudo tee -a /etc/fstab

  echo "mounting NFS volume from $share on $target"
  mount -t nfs $target || echo "failed to mount $share on $target"
}
[ -z "${home_ip}" ] || mount_nfs_volume ${home_ip}:/srv/home /home
[ -z "${tools_ip}" ] || mount_nfs_volume ${tools_ip}:/srv/tools /tools

install_packer() {
  curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo apt-key add -
  sudo apt-add-repository "deb [arch=amd64] https://apt.releases.hashicorp.com $(lsb_release -cs) main"
  sudo apt-get update && sudo apt-get install packer
}
install_packer

clone_git_repo() {
  local clone_url=$1
  local repo_path=$2

  echo "cloning repo from $clone_url into the $repo_path directory"
  mkdir -p $repo_path
  git clone $clone_url $repo_path || echo "failed to clone repo"
}
[ -z "${build_repo}" ] || clone_git_repo ${build_repo} /opt/build
